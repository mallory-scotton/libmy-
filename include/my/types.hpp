/*
** EPITECH PROJECT, 2024
** libmy++ - types
** File description:
** types
*/

#ifndef TYPES_HPP_
    #define TYPES_HPP_

///////////////////////////////////////////////////////////////////////////////
/// \brief Namespace my::types
///////////////////////////////////////////////////////////////////////////////
namespace my::types
{

///////////////////////////////////////////////////////////////////////////////
/// \brief Signed integer type definition
///////////////////////////////////////////////////////////////////////////////
typedef signed char int8;
typedef signed short int16;
typedef signed int int32;
typedef signed long long int64;

///////////////////////////////////////////////////////////////////////////////
/// \brief Unsigned integer type definition
///////////////////////////////////////////////////////////////////////////////
typedef unsigned char uint8;
typedef unsigned short uint16;
typedef unsigned int uint32;
typedef unsigned long long uint64;

///////////////////////////////////////////////////////////////////////////////
/// \brief Basic structure for signed integers
///////////////////////////////////////////////////////////////////////////////
struct int2     { int32 x, y; };
struct int3     { int32 x, y, z; };
struct int4     { int32 x, y, z, w; };

///////////////////////////////////////////////////////////////////////////////
/// \brief Basic structure for unsigned integers
///////////////////////////////////////////////////////////////////////////////
struct uint2    { uint32 x, y; };
struct uint3    { uint32 x, y, z; };
struct uint4    { uint32 x, y, z, w; };

///////////////////////////////////////////////////////////////////////////////
/// \brief Basic structure for floats
///////////////////////////////////////////////////////////////////////////////
struct float2   { float x, y; };
struct float3   { float x, y, z; };
struct float4   { float x, y, z, w; };

///////////////////////////////////////////////////////////////////////////////
/// \brief Basic structure for doubles
///////////////////////////////////////////////////////////////////////////////
struct double2  { double x, y; };
struct double3  { double x, y, z; };
struct double4  { double x, y, z, w; };

} // !my::types

///////////////////////////////////////////////////////////////////////////////
/// \brief Forward to global scope
///////////////////////////////////////////////////////////////////////////////
using namespace my::types;

#endif /* !TYPES_HPP_ */
